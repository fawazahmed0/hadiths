{"mappings":"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","sources":["code/commoncode.js","code/sections.js"],"sourcesContent":["window.htmlHadithContainer =\n  `    \n<div class=\"card text-dark m-3\">\n<div class=\"card-body\">\n<div class=\"card-text m-1\"></div>\n</div>\n\n<span id=\"footercontainer\">\n</span>\n\n</div>\n`\n\nwindow.tableContainer =\n  `\n<table class=\"table table-hover  table-striped\">\n  <tbody>\n\n  </tbody>\n</table>\n`\n\nwindow.searchBar =\n  `\n<div class=\"mb-3\">\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n    </svg>\n  </button>\n</form>\n</div>\n`\n\nwindow.capitalize = function (words) {\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\n}\n\nwindow.htmlparser = new window.DOMParser();\n\nwindow.getElement = function (elementName, attributesObj) {\n  if (!attributesObj)\n    attributesObj = {}\n  let element = document.createElement(elementName);\n  for (let [key, value] of Object.entries(attributesObj)) {\n    element.setAttribute(key, value);\n  }\n  return element\n}\n\nwindow.apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\nwindow.quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\nwindow.extensions = [\".min.json\", \".json\"]\n\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\n// Get links async i.e in parallel\nwindow.getJSON = async function (endpoints, links) {\n  let returnSingle = false\n  if (!Array.isArray(endpoints)) {\n    endpoints = [endpoints]\n    returnSingle = true\n  }\n  let result = await Promise.all(\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\n  ).catch(console.error)\n  if (returnSingle)\n    return result[0]\n  return result\n}\n\n\nwindow.fetchWithFallback = async function (links, obj) {\n  let response;\n  for (let link of links) {\n    try {\n      response = await fetch(link, obj)\n      if (response.ok)\n        return response\n    } catch (e) { }\n  }\n  return response\n}\n\n// convert endpoint into multiple urls, including fallback urls\nwindow.getURLs = function (endpoint, links) {\n  links = links || apiLinks\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\n}\n\nwindow.getElementFromHTML = function (htmlString) {\n  return htmlparser.parseFromString(htmlString, \"text/html\");\n}\n\n// pass hadith object & get card element with all hadith info in it\nwindow.getHadithCardElem = function (hadith, editionName, dirval, lang, isocodes) {\n  let lowerLang = lang.toLowerCase()\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\n  cardElem.querySelector('.card-text').innerText = hadith.text\n  let footerDiv = getElement('div', { class: \"card-footer\" })\n  if (hadith.grades.length > 0) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<table class=\"table table-sm\">\n    <thead>\n      <tr>\n        <th>Grade</th>\n      \n      </tr>\n    </thead>\n    <tbody>\n    </tbody>\n    </table>`);\n  }\n\n  for (let grade of hadith.grades)\n    cardElem.querySelector('tbody').insertAdjacentHTML(\"beforeend\", `<tr><td>${capitalize(grade.grade)}</td><td>${grade.name}</td></tr>`);\n  let hrefVal = `hadith:${editionName}:${hadith.hadithnumber}`\n  if (\"hadithnumber\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\n  }\n  if (\"arabicnumber\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\n  }\n\n  if (\"reference\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e => capitalize(e)).join(' ')}</a><br>`);\n  }\n  cardElem.setAttribute('id', hrefVal)\n\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\n\n  return cardElem\n}\n\nwindow.beginSearch = function () {\n            let newparams = new window.URLSearchParams();\n            let searchquery = document.getElementById('searchquery').value\n            newparams.set('q', `repo:fawazahmed0/quran-hadith-search path:/^Hadiths\\\\// ${searchquery.trim()}`)\n            window.open(`https://github.com/search?${newparams.toString()}&type=code`)\n}\n\nwindow.isObject = function (obj) {\n  return obj === Object(obj);\n}\n\n// Show as loading spinning wheel,only if there isn't any other\nwindow.showSpinningWheel = function (selector, position) {\n  if (!document.body.contains(document.querySelector('#spinningwheel')) ) {\n    document.querySelector(selector).insertAdjacentHTML(position,`<div  id=\"spinningwheel\">\n    <div class=\"text-center\">\n      <div class=\"spinner-border m-5\" role=\"status\">\n      </div>\n      </div>\n      </div>\n      `)\n  }\n}\n\nwindow.removeSpinningWheel = function () {\n  if (document.body.contains(document.querySelector('#spinningwheel')) )\n  document.querySelector('#spinningwheel').remove()\n}\n\n// Hash with Text Fragment\nwindow.getHashTextFragment = function () {\n  let hashWithFragment;\n  // https://web.dev/text-fragments/#obtaining-text-fragments-for-analytics-purposes\n  try{\n    hashWithFragment =  new URL(performance.getEntries().find(({ type }) => type === 'navigate').name).hash\n  }catch(e){}\n  return hashWithFragment || window.location.hash\n}\n","import './commoncode.js'\nasync function ready() {\nlet params = new window.URLSearchParams(document.location.search);\nlet edition = params.get(\"edition\");\nlet bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\nif (!bareedition)\nreturn\nwindow.showSpinningWheel('#mycontainer','beforeend')\nlet data = await getJSON('info')\n\nlet UL = getElement('ul', { class: 'list-group' })\nfor (let [key, value] of Object.entries(data[bareedition]['metadata']['sections'])) {\nlet LI = getElement('li', { class: 'list-group-item' })\nlet newparams = new window.URLSearchParams();\nnewparams.set('edition', edition)\nnewparams.set('type', 'section')\nnewparams.set('num', key)\n\nlet sectionDetails = data[bareedition]['metadata']['section_details'][key]  \n  \nlet aElem = getElement('a', { href: `data.html?${newparams.toString()}` })\naElem.innerText = `Section ${key} : ${value}`\nlet spanElem = getElement('span', { class: 'float-end text-dark' })\nif(key!=\"0\")\nspanElem.innerText = /muslim/i.test(bareedition) ? `${Math.floor(sectionDetails.arabicnumber_first)} to ${Math.floor(sectionDetails.arabicnumber_last)}` : `${Math.floor(sectionDetails.hadithnumber_first)} to ${Math.floor(sectionDetails.hadithnumber_last)}`\naElem.appendChild(spanElem)\nLI.appendChild(aElem)\nUL.appendChild(LI)\n}\nwindow.removeSpinningWheel()\ndocument.querySelector('#mycontainer').appendChild(UL)\n\n// scroll to hash Text fragment\nwindow.location.hash = window.getHashTextFragment()\n\n}\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ready);\n"],"names":["window","htmlHadithContainer","tableContainer","searchBar","capitalize","words","toString","toLowerCase","replace","match","toUpperCase","trim","htmlparser","DOMParser","getElement","elementName","attributesObj","element","document","createElement","key","value","Object","entries","setAttribute","apiLinks","quranLinks","extensions","getJSON","async","endpoints","links","returnSingle","Array","isArray","result","Promise","all","map","endpoint","fetchWithFallback","getURLs","then","response","json","catch","console","error","obj","link","fetch","ok","e","ext","flat","getElementFromHTML","htmlString","parseFromString","getHadithCardElem","hadith","editionName","dirval","lang","isocodes","lowerLang","cardElem","querySelector","innerText","text","footerDiv","class","grades","length","appendChild","cloneNode","from","querySelectorAll","at","insertAdjacentHTML","grade","name","hrefVal","hadithnumber","arabicnumber","reference","join","iso1","iso2","beginSearch","newparams","URLSearchParams","searchquery","getElementById","set","open","isObject","showSpinningWheel","selector","position","body","contains","removeSpinningWheel","remove","getHashTextFragment","hashWithFragment","URL","performance","getEntries","find","type","hash","location","addEventListener","params","search","edition","get","bareedition","split","data","UL","LI","sectionDetails","aElem","href","spanElem","test","Math","floor","arabicnumber_first","arabicnumber_last","hadithnumber_first","hadithnumber_last"],"version":3,"file":"sections.ee398472.js.map"}